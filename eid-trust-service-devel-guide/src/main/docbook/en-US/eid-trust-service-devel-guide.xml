<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC 
	"-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article lang="en">
	<articleinfo>
		<title>Fedict eID Trust Service Developer Guide</title>
		<subtitle>
			Version &project.version;
		</subtitle>
		<copyright>
			<year>2008-2010</year>
			<holder>Fedict</holder>
		</copyright>
		<releaseinfo>28 Oct 2010</releaseinfo>
		<authorgroup>
			<author>
				<firstname>Wim</firstname>
				<surname>Vandenhaute</surname>
			</author>
		</authorgroup>
		<abstract>
			<para>This manual serves as an entry point for integrating the eID
				Trust Service into your web application.
			</para>
		</abstract>
	</articleinfo>
	<section>
		<title>Introduction</title>
		<para>
			The key words "MUST", "MUST NOT", "REQUIRED", "SHOULD", "SHOULD NOT",
			"RECOMMENDED", "MAY", and "OPTIONAL" in this document (in uppercase,
			as shown) are to be interpreted as described in
			<ulink url="http://www.ietf.org/rfc/rfc2119.txt">[RFC2119]</ulink>
			.
		</para>
		<para>
			The eID Trust Service provides a web service based on the
			<ulink url="http://www.w3.org/TR/xkms2/">W3C XKMS v.2.0 standard</ulink>
			for validation of a certificate chain against a certain trust domain.
			The web service also allows for historical validation of a
			certificate chain,
			where you can provide the necessary revocation data
			using or a list of
			OCSP response and/or CRLs or using the
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES-L_form_The_RevocationValues_element">
				XAdES revocation values element.
			</ulink>
			.
			Besides that the web service also allows for validation of attribute
			certificates
			and timestamp tokens.
		</para>
		<para>
			For more technical detail on the XKMS 2 web service, please see
			the
			architecture guide
			provided in the SDK package.
		</para>
	</section>
	<section>
		<title>XKMS 2 web service client</title>
		<para>
			To access the Fedict eID Trust Service XKMS v2.0 web service the SDK
			provides an
			XKMS2Client component.
			Initializing this component takes a
			String location argument which expects to be
			the full path of the
			XKMS2 web service,
			e.g.
			<code>http://www.e-contract.be/eid-trust-service-ws/xkms2</code>
			.
		</para>
		<section>
			<title>Debugging</title>
			<para>
				During the development process, you might want some more debugging
				info on the
				sent and received SOAP messages. You can turn this
				feature on using the
				<code>setLogging(boolean)</code>
				method.
			</para>
		</section>
		<section>
			<title>Proxy</title>
			<para>
				If you are behind a proxy, you can configure this in the XKMS2Client
				using the
				<code>setProxy(String proxyHost, int proxyPort)</code>
				method.
			</para>
		</section>
		<section>
			<title>WS-Security</title>
			<para>
				The Trust Service you are connecting might be configured to use
				WS-Security for signing the outgoing
				message. The XKMS2 client will
				in this case automatically verify the
				incoming message signature
				using the embedded certificate in the WS-Security element.
				You can
				optionally add extra verification for this certificate by
				specifying
				manually the certificate
				you expect it to be using the
				<code>setServerCertificate(X509Certificate)</code>
				method.
				By default the WS-Security timestamp present will be verified
				to not
				have an offset bigger then
				5 minutes. You can optionally
				configure this offset using the
				<code>setMaxWSSecurityTimestampOffset(long)</code>
				( in seconds ).
			</para>
		</section>
		<section>
			<title>Unilateral TLS authentication</title>
			<para>
				When accessing the trust service over SSL, you can optionally
				specify the Public Key
				to be used for verification of the SSL
				certificate using the method
				<code>setServicePublicKey(PublicKey)</code>
				.
			</para>
		</section>
	</section>
	<section>
		<title>Certificate chain validation</title>
		<para>
			In its most minimal configuration, a client can specify a
			certificate
			path for validation. The trust service
			will then perform a
			PKI-validation against the configured default trust
			domain.
			It is
			expected for the certificate path to be ordered, holding the root
			certificate as last in the list.
		</para>
		<para>
			Case the validation was not successful, a
			<code>ValidationFailedException</code>
			will be thrown,
			containing the list of
			<ulink url="http://www.w3.org/TR/xkms2/#XKMS_2_0_Section_5_1">XKMS2 reason URIs</ulink>
			what caused the PKI-validation to fail. These reason URIs can also be
			found using the method
			<code>getInvalidReasons()</code>
			method.
		</para>
		<para>
			Case you want to validate against a specific trust domain off course
			the XKMS2 client's API lets you specify this.
			You can also optionally
			request for the trust service to return the used
			revocation data
			( OCSP
			responses and/or CRL data ). This revocation data can
			afterwards be
			retrieved using
			<code>getRevocationValues</code>
			which returns a
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES-L_form_The_RevocationValues_element">
				XAdES revocation values element
			</ulink>
			.
		</para>
	</section>
	<section>
		<title>Historical validation</title>
		<para>
			It is possible to perform historical validation on certificate paths.
			The XKMS2Client provides 3 means of providing
			the necessary revocation
			data for the trust service. Either by explictly
			specifying the list of
			<code>OCSPResp</code>
			and
			<code>X509CRL</code>
			, or by specifying the list of encoded OCSP responses and CRL data,
			or alternatively by specifying the
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES-L_form_The_RevocationValues_element">
				XAdES revocation values element
			</ulink>
			explicitly.
		</para>
		<para>
			Historical validations are usefull in the context of
			verification of
			ETSI XAdES v.1.3.2 digital signatures, focussed on
			XAdES-X-L signatures.
		</para>
	</section>
	<section>
		<title>Attribute certificate validation</title>
		<para>
			It is possible to validate Attribute certificates using the
			XKMS2 web
			service. To do so you will have to
			provide the certificate
			path for PKI-validation of these attribute
			certificates.
		</para>
		<para>
			You can specify the attribute certificate using the
			<ulink
				url="http://www.w3.org/TR/XAdES/#Syntax_for_XAdES_The_SignerRole_element">
				XAdES CertifiedRolesListType element
			</ulink>
			.
		</para>
	</section>
	<section>
		<title>TSA certificates</title>
		<para>
			It is possible to validate TSA certificates using the XKMS2 web
			service.
			The encoded timestamp token will then off course need to
			contain the
			certificate path of the
			the TSA certificate for the trust
			service be able to perform
			PKI-validation.
		</para>
		<para>
			You can specifiy the timestamp token using the BouncyCastle
			<code>TimeStampToken</code>
			class.
		</para>
	</section>
	<section>
		<title>High Availability XKMS2 client</title>
		<para>
			The
			<code>HAXKMS2Client</code>
			component is a high availability component providing the same
			features
			as the
			<code>XKMS2Client</code>
			but lets you specify a custom jTrust
			<code>TrustValidator</code>
			to be used in case the validation request to the XKMS2 web service
			failed unexpectedly due to connection
			issues.
			In that case it will
			fallback to your specified TrustValidator.
		</para>
	</section>
	<appendix>
		<title>eID Trust Service Developer Guide License</title>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="cc.logo.large.png"
						scale="100" />
				</imageobject>
			</mediaobject>
			This document has been released under the Creative Commons license.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="share.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You are free to Share â€” to copy, distribute and transmit the work.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="by.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You must attribute the work in the manner specified by the author or
			licensor (but not in any way that suggests that they endorse you or
			your use of the work).
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nc.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not use this work for commercial purposes.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nd.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not alter, transform, or build upon this work.
		</para>
		<para>
			More information about the Creative Commons license conditions can be
			found at
			<ulink url="http://creativecommons.org/">Creative Commons organization</ulink>
			.
		</para>
	</appendix>
	<appendix>
		<title>eID Trust Service License</title>
		<para>The eID Trust Service source code has been released under the
			GNU LGPL version 3.0.
		</para>
		<para>
			<code>This is free software; you can redistribute it and/or modify it
				under the terms of the GNU Lesser General Public License version
				3.0
				as published by the Free Software Foundation.

				This software is
				distributed in the hope that it will be useful,
				but WITHOUT ANY
				WARRANTY; without even the implied warranty of
				MERCHANTABILITY or
				FITNESS FOR A PARTICULAR PURPOSE. See the GNU
				Lesser General Public
				License for more details.

				You should have received a copy of the GNU
				Lesser General Public
				License along with this software; if not, see
				http://www.gnu.org/licenses/.
			</code>
		</para>
	</appendix>
	<appendix>
		<title>Revision history</title>
		<table>
			<title>Revision history</title>
			<tgroup cols="3">
				<colspec colwidth="1*" />
				<colspec colwidth="1*" />
				<colspec colwidth="2*" />
				<thead>
					<row>
						<entry>Date</entry>
						<entry>Author</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>28 Oct 2010</entry>
						<entry>Wim Vandenhaute</entry>
						<entry>Initial version.</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</appendix>
</article>
