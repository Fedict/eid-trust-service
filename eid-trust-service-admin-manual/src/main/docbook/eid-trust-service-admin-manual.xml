<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC 
	"-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<article lang="en">
	<articleinfo>
		<title>Fedict eID Trust Service Administrator Manual</title>
		<copyright>
			<year>2008-2010</year>
			<holder>Fedict</holder>
		</copyright>
		<releaseinfo>16 Mar 2010</releaseinfo>
		<authorgroup>
			<author>
				<firstname>Wim</firstname>
				<surname>Vandenhaute</surname>
			</author>
		</authorgroup>
		<abstract>
			<para>This manual serves as an entry point for setting up the eID
				Trust Service.</para>
		</abstract>
	</articleinfo>
	<section>
		<title>Introduction</title>
		<para>
			The key words "MUST", "MUST NOT", "REQUIRED", "SHOULD", "SHOULD NOT",
			"RECOMMENDED", "MAY", and "OPTIONAL" in this document (in uppercase,
			as shown) are to be interpreted as described in
			<ulink url="http://www.ietf.org/rfc/rfc2119.txt">[RFC2119]</ulink>
			.
			The eID Trust Service provides two major service artifacts:
			<orderedlist>
				<listitem>
					eID Trust Service portal
					<para>Via this web portal citizens can check the validity of their
						eID certificates.</para>
				</listitem>
				<listitem>
					eID Trust Service validation web service
					<para>Via this SOAP web service Relying Parties (aka Service
						Providers) can check the validity of certificate paths. This web
						service is constructed according to the W3C XKMS2 web service
						standard.</para>
				</listitem>
			</orderedlist>
			Besides these two service artifacts, the eID Trust Service also comes
			with an Admin portal that allows administrators to manage the eID
			Trust Service via an easy to use web portal interface. In the
			following paragraphs we will use $EID_TRUST_SERVICE_ADDRESS as the
			(internal) web address where the eID Trust Service product has been
			deployed.
		</para>
		<section>
			<title>eID Trust Service Portal</title>
			<para>After deployment of the eID Trust Service product, the eID
				Trust Service Portal is available at
				$EID_TRUST_SERVICE_ADDRESS/eid-trust-service-portal/. This web
				portal MUST be accessed over unilateral SSL. The SSL SHOULD be
				terminated on the front-end Apache HTTPD service so that the SSL
				information can be communicated to the JBoss Application Service
				over AJP. If such a setup is not possible this SHOULD be clearly
				communicated in advance to the eID Trust Service development team so
				they can properly configure the eID Applet Service that is used
				within the eID Trust Service Portal.</para>
		</section>
		<section>
			<title>eID Trust Service Validation Web Service</title>
			<para>After deployment of the eID Trust Service product, the eID
				Trust Service validation web service is available at
				$EID_TRUST_SERVICE_ADDRESS/eid-trust-service-ws/xkms2
				This web
				service MUST be accessible via both HTTP and HTTPS (thus
				unilateral
				SSL). When this web service is accessed over plain HTTP,
				the service
				provides the possibility to sign the response messages
				using
				WS-Security.</para>
		</section>
		<section>
			<title>eID Trust Service Admin Portal</title>
			<para>After deployment of the eID Trust Service, the eID Trust
				Service Admin Portal is available via:
				EID_TRUST_SERVICE_ADDRESS/eid-trust-service-admin-portal/. This web
				portal MUST be accessed over unilateral SSL.</para>
		</section>
		<section>
			<title>SNMP</title>
			<para>The eID Trust Service yields different SNMP counters on port
				7894.</para>
		</section>
		<section>
			<title>Database</title>
			<para>The eID Trust Service product required a database to operate.
			</para>
		</section>
		<section>
			<title>JBoss Application Server</title>
			<para>
				The JBoss Application Server offers:
				<itemizedlist>
					<listitem>
						AJP at port: 8009
					</listitem>
					<listitem>
						HTTP at port: 8080
					</listitem>
					<listitem>
						HTTPS at port: 8443
					</listitem>
				</itemizedlist>
				AJP is preferred for the connection between the front-end Apache
				HTTPD
				and the JBoss Application Server.
			</para>
		</section>
	</section>
	<section>
		<title>Installation</title>
		<para>
			The Fedict eID Trust Service comes with support for HSQL, MySQL
			and Oracle. This chapter explains how to initialize the database.
		</para>
		<section>
			<title>HSQL</title>
			<para>
				If you wish to run the Fedict eID Trust Service using HSQL, you
				can
				use the JBoss distribution that comes with the Fedict eID Applet.
				Simply execute
				<code>mvn jboss:deploy</code>
				in the eid-trust-service-deploy artifact and you are good to go.
			</para>
			<para>
				Beware though, as parsing large CRL's might be memory
				intensive, you can quickly run into memory issues on HSQL. Therefore
				it is only recommended to use this during a test setup.
			</para>
		</section>
		<section>
			<title>MySQL</title>
			<para>
				If you wish to run the Fedict eID Trust Service using MySQL,
				you can
				use the eid-trust-service-mysql-distribution artifact.
				After
				unpacking you first have to initialize your database. To do so,
				execute the sql scripts which can be found in
				<code>/sql</code>
				.
				The default username/password for the
				<code>trust</code>
				database is
				<code>trust/trust</code>
				. If you wish to change this, you will have to manually modify the
				sql scripts and change the datasource in the jboss distribution. The
				latter can be found in
				<code>/jboss/server/default/deploy/trust-service-ds.xml</code>
				.
			</para>
		</section>
		<section>
			<title>Oracle</title>
			<para>TBD</para>
		</section>
		<section>
			<title>SQuirrel SQL</title>
			<para>
				To view the contents of the database behind the FedICT eID Trust
				Service, one can use the
				<ulink url="http://www.squirrelsql.org/">SQuirrel SQL Client</ulink>
				. This SQL client allows you to view the structure of any JDBC
				compliant database.
			</para>
			<para>
				To be able to connect to your HSQL/MySQL/Oracle
				database you will
				need to configure a JDBC driver. You can download
				the drivers @
				<ulink url="http://www.mysql.com/downloads/connector/j/">MySQL JDBC Driver</ulink>
				and
				<ulink
					url="http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/index.html">
					Oracle JDB Driver
				</ulink>
				.
				Configure your driver in SQuirrel SQL by selecting the appropriate
				one, select
				<code>Modify Driver...</code>
				and add your JDBC driver jar in the
				<code>Extra Class Path</code>
				tab.
			</para>
			<para>
				When you are done with this, you can configure the connection to
				the
				database by adding a new
				<code>Alias</code>
				. Select the appropriate driver, and configure the URL, username and
				password as is configured in the FedICT eID Trust Service datasource
				file (
				<code>/jboss/server/default/deploy/trust-service-ds.xml</code>
				).
			</para>
		</section>
		<section>
			<title>Transaction timeouts</title>
			<para>
				The downloading and processing of large CRLs can sometimes take
				alot
				of time. This can lead to internal transaction timeouts. By
				default,
				the custom JBoss MySQL and Oracle Distributions have a
				transaction
				timeout configured of 1200 seconds or 20 minutes. Which should be
				sufficient.
				If this still proves to be insufficient, this can be
				changed in
				<code>jboss/server/default/deploy/transaction-jboss-beans.xml</code>
				Look for following line and change accordingly:
				<programlisting role="XML"><![CDATA[
					<property name="defaultTimeout">1200</property>
				]]></programlisting>
			</para>
		</section>
	</section>
	<section>
		<title>Running</title>
		<para>
			After you have correctly setup your database, you can start the
			application by
			<code>./jboss/bin/run.sh -b 0.0.0.0</code>
			. Note that in case you choose HSQL as your database, you will have
			to first start the Fedict eID Applet JBoss distribution, followed by
			running the command
			<code>mvn jboss:deploy</code>
			from the eid-trust-service-deploy artifact. The MySQL and Oracle
			distribution have the Fedict eID Trust Service Application packaged
			and will be started automatically.
		</para>
		<para>
			After the application has started, it will have initialized itself
			with 4 trust domains.
			<orderedlist>
				<listitem>
					eID Authentication Trust Domain
				</listitem>
				<listitem>
					eID Non Repudiation Trust Domain
				</listitem>
				<listitem>
					eID National Registry Trust Domain
				</listitem>
				<listitem>
					Belgian TSA Trust Domain
				</listitem>
			</orderedlist>
		</para>
		<para>
			The default trust domain will be set to the eID Authentication
			Trust
			Domain. In order to function properly, the application needs to
			be
			able to make outgoing calls for CRL, OCSP, TSP and NTP. If you are
			running behind a proxy, you can setup the proxy using the
			administration webapp.
		</para>
	</section>
	<section>
		<title>Administration</title>
		<para>
			The Fedict eID Trust Service comes with an administration
			portal. This portal allows you to setup your network proxy if any,
			manage trust domains and other aspects of the service.
		</para>
		<section>
			<title>Administrator registration</title>
			<para>
				To authenticate to the administrator portal, an eID
				authentication
				will be performed. If the service was freshly
				installed, the first
				successfull authentication will be
				automatically
				registered as
				administrator. Subsequent administrators
				will have to
				be accepted by
				this one. There are two ways to accomplish this:
				<orderedlist>
					<listitem>
						<para>
							Perform a login which will add you as a pending
							administrator which can subsequently be approved by an
							administrator.
						</para>
					</listitem>
					<listitem>
						<para>
							Ask another administrator who is logged to register you from
							within the admin portal. You can find this in the
							<code>Configuration</code>
							page.
						</para>
					</listitem>
				</orderedlist>
			</para>
		</section>
		<section>
			<title>Configuration</title>
			<section>
				<title>Administrators</title>
				<para>Here you can view existing and pending administrators, approve
					pending administrators, remove administratos and register an
					additional one. To register an additional one, a full eID
					authentication has to be performed of this new administrator.
				</para>
			</section>
			<section>
				<title>WS Security Configuration</title>
				<para>
					The eID Trust Service Validation Web Service has the
					possibility to optionally sign its response message using
					WS-Security. The keystore to be used for this can be configured
					here. 
				</para>
			</section>
			<section>
				<title>Network Configuration</title>
				<para>If you are operating behind a proxy, you can setup this in
					here and enable or disable the proxy configuration temporarily.
				</para>
			</section>
			<section>
				<title>Clock Drift Detection</title>
				<para>
					The Fedict eID Trust Service comes with built in support for
					NTP and TSP.
				</para>
			</section>
			<section>
				<title>Information Message</title>
				<para>
					The information message to be shown on
					$EID_TRUST_SERVICE_ADDRESS/eid-trust-service-portal can be
					configured here for all available languages of the FedICT eID Trust
					Service Portal.
				</para>
			</section>
		</section>
		<section>
			<title>Virtual Trust Domains</title>
			<para>
				Virtual trust domains are a group of existing trust domains.
				Users of the eID Trust Service Validation Web Service have the
				possibility to specify a virtual trust domain to validate against
				all of its trust domains configured.
			</para>
		</section>
		<section>
			<title>Trust Domains</title>
			<para>
				You can add, modify, remove trust domains here. Also you can
				set the default trust domain for the FedICT eID Trust Service.
				This
				trust domain will be used in the eID Trust Service Validation Web
				Service if no specific trust domain was specified.
				For each trust
				domain you can specify whether or not CRL caching should be used,
				which trust points lie under this trust domain and which certificate
				contraints are too be enforced when validating against this trust
				domain.
			</para>
		</section>
		<section>
			<title>Trust Points</title>
			<para>
				For each trust point, you can specify a cron expression for
				specifying
				the CRL cache refresh interval. Such a refresh includes
				refreshing all
				underlying CA's that have been cached. You can also
				refresh the CRL cache immediately here for debugging purposes. For
				each trust point you can see the list of CA's associated with
				this
				trust point and for each CA refresh the cache individually.
			</para>
		</section>
		<section>
			<title>SNMP</title>
			<para>
				The FedICT eID Trust Service has several SNMP counters
				available.
				These counters can be retrieved by invoking the command:
				<programlisting role="XML"><![CDATA[
					snmpget -v 2c -c public localhost:7894 1.3.6.1.4.1.7890.0.0
				]]></programlisting>
				. The available SNMP counters are:
				<itemizedlist>
					<listitem>
						<para># of validations ( OID = 1.3.6.1.4.1.7890.0.0 )</para>
					</listitem>
					<listitem>
						<para># of CRL cache refreshes ( OID = 1.3.6.1.4.1.7890.1.0 )
						</para>
					</listitem>
					<listitem>
						<para># of CRL cache hits ( OID = 1.3.6.1.4.1.7890.2.0 )</para>
					</listitem>
					<listitem>
						<para># of CRL cache misses ( OID = 1.3.6.1.4.1.7890.3.0 )</para>
					</listitem>
					<listitem>
						<para>CRL cache hit % ( OID = 1.3.6.1.4.1.7890.4.0 )</para>
					</listitem>
					<listitem>
						<para># of CRL download failures ( OID = 1.3.6.1.4.1.7890.5.0 )
						</para>
					</listitem>
					<listitem>
						<para># of OCSP request failures ( OID = 1.3.6.1.4.1.7890.6.0 )
						</para>
					</listitem>
				</itemizedlist>
			</para>
		</section>
	</section>
	<appendix>
		<title>eID Trust Service Admin Manual License</title>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="cc.logo.large.png"
						scale="100" />
				</imageobject>
			</mediaobject>
			This document has been released under the Creative Commons license.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="share.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You are free to Share — to copy, distribute and transmit the work.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="by.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You must attribute the work in the manner specified by the author or
			licensor (but not in any way that suggests that they endorse you or
			your use of the work).
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nc.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not use this work for commercial purposes.
			<mediaobject>
				<imageobject>
					<imagedata format="PNG" fileref="nd.large.png" scale="20" />
				</imageobject>
			</mediaobject>
			You may not alter, transform, or build upon this work.
		</para>
		<para>
			More information about the Creative Commons license conditions can be
			found at
			<ulink url="http://creativecommons.org/">Creative Commons organization</ulink>
			.
		</para>
	</appendix>
	<appendix>
		<title>eID Trust Service License</title>
		<para>The eID Trust Service source code has been released under the
			GNU LGPL version 3.0.</para>
		<para>
			<code>This is free software; you can redistribute it and/or modify it
				under the terms of the GNU Lesser General Public License version
				3.0
				as published by the Free Software Foundation.

				This software is
				distributed in the hope that it will be useful,
				but WITHOUT ANY
				WARRANTY; without even the implied warranty of
				MERCHANTABILITY or
				FITNESS FOR A PARTICULAR PURPOSE. See the GNU
				Lesser General Public
				License for more details.

				You should have received a copy of the GNU
				Lesser General Public
				License along with this software; if not, see
				http://www.gnu.org/licenses/.</code>
		</para>
	</appendix>
	<appendix>
		<title>Revision history</title>
		<table>
			<title>Revision history</title>
			<tgroup cols="2">
				<colspec colwidth="1*" />
				<colspec colwidth="1*" />
				<colspec colwidth="2*" />
				<thead>
					<row>
						<entry>Date</entry>
						<entry>Author</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>16 Mar 2010</entry>
						<entry>Wim Vandenhaute</entry>
						<entry>Initial version.</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</appendix>
</article>